type User {
    id: String
    username: String!
    password: String!
    profile_image: String
}

type AuthUser {
    id: String
    user: String!
    auth_key: String!
}

type UserResponse {
    id: String!
    username: String!
    profile_image: String
}

# Register
input registerRequest {
    username: String!
    password: String!
    verification_password: String!
}

type registerResponse {
    success: Boolean!
    auth_key: String
    reason: String
}

# Login
input loginRequest {
    username: String!
    password: String!
}

type loginResponse {
    success: Boolean!
    auth_key: String
    reason: String
}

type Query {
    users: [UserResponse!]!
    getUser(id: String!): UserResponse!
}

type Mutation {
    registerUser(input: registerRequest!): registerResponse!
    loginUser(input: loginRequest!): loginResponse!
    changeProfileImage(image: Upload!): String!
}