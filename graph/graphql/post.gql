scalar Upload

type Post {
    id: String
    user: String!
    title: String!
    description: String!
    image: String! 
    ril: [String!]!
    fek: [String!]!
    time: String!
    comments: [String!]!
}

type Comment {
    id: String
    post: String!
    user: String!
    time: String!
    comment: String!
}

type CommentResponse {
    id: String!
    username: String!
    time: String!
    comment: String!
}

type PostResponse {
    id: String!
    username: String!
    title: String!
    description: String!
    image: String!
    ril: Int!
    fek: Int!
    user_ril: Boolean!
    user_fek: Boolean!
    comments: [CommentResponse!]!
}

input requestSendComment {
    post_id: String!
    comment: String!
}

type responseSendComment {
    comment_id: String!
    time: String!
}

type responseCreatePost {
    post_id: String!
}

extend type Query {
    posts: [PostResponse!]!
}

extend type Mutation {
    createPost(
        title: String!
        description: String!
        image: Upload!
    ): responseCreatePost!
    sendRil(post_id: String!): Boolean
    sendFek(post_id: String!): Boolean
    sendComment(input: requestSendComment!): responseSendComment!
}